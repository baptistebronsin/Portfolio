stages:
  - lint
  - build
  - deploy

lint:
  image: node:20
  stage: lint
  script:
    - npm install -g pnpm
    - pnpm install
    - npx prisma generate
    - pnpm run lint

build:
  image: docker:20.10.7
  services:
    - docker:20.10.7-dind
  stage: build
  before_script:
    - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - |
      IMAGE_TAG="$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    - docker build --build-arg -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG
  after_script:
    - docker logout $CI_REGISTRY
    - docker image prune -f
  only:
    - main

update_manifest:
  stage: deploy
  image: alpine:latest
  script:
    - apk add --no-cache git
    - git config user.email "contact@baptistebronsin.be"
    - git config user.name "Baptiste CI"
    - git remote set-url origin https://oauth2:${GITLAB_PAT}@gitlab.com/baptiste.bronsin/portfolio.git
    - git fetch origin $CI_COMMIT_REF_NAME
    - git checkout -b $CI_COMMIT_REF_NAME origin/$CI_COMMIT_REF_NAME
    - |
      IMAGE_TAG="$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
      HELM_VALUES_FILE="helm/values.yaml"
      sed -i "s/portfolio:.*/portfolio:$IMAGE_TAG/" $HELM_VALUES_FILE
    - git add $HELM_VALUES_FILE
    - git commit -m "Update image tag to $IMAGE_TAG [skip ci]"
    - git push origin $CI_COMMIT_REF_NAME
  only:
    - main
  dependencies:
    - build
